[1mdiff --git a/include/icebus_host/IcebusHost.hpp b/include/icebus_host/IcebusHost.hpp[m
[1mindex 31a86aa..2cc966b 100644[m
[1m--- a/include/icebus_host/IcebusHost.hpp[m
[1m+++ b/include/icebus_host/IcebusHost.hpp[m
[36m@@ -184,16 +184,25 @@[m [munion M3Command{[m
       uint8_t data[11];[m
   };[m
 [m
[32m+[m
   union M3ControlMode{[m
     struct __attribute__((packed)) {[m
           uint32_t header;[m
           uint8_t id;[m
           uint8_t control_mode;[m
[32m+[m[32m          uint32_t setpoint;[m
[32m+[m[32m          uint32_t Kp;[m
[32m+[m[32m          uint32_t Ki;[m
[32m+[m[32m          uint32_t Kd;[m
[32m+[m[32m          uint32_t deadband;[m
[32m+[m[32m          uint32_t IntegralLimit;[m
[32m+[m[32m          uint32_t PWMLimit;[m
           uint16_t crc;[m
[31m-      }values = {.header = 0x0DD0FECA };[m
[31m-      uint8_t data[8];[m
[32m+[m[32m      }values;[m
[32m+[m[32m      uint8_t data[36];[m
   };[m
 [m
[32m+[m
   union M3StatusResponse{[m
     struct __attribute__((packed)) {[m
           uint32_t header;[m
[36m@@ -224,7 +233,7 @@[m [mpublic:[m
   void SendHandStatusRequest(int id);[m
   void SendHandStatusResponse(int id);[m
   void SendM3Command(int id, int32_t setpoint);[m
[31m-  void SendM3ControlMode(int id, uint8_t control_mode);[m
[32m+[m[32m  void SendM3ControlMode(int id, uint8_t control_mode, int32_t setpoint);[m
   void Listen(int id);[m
   /**[m
    * Publishes information about motors[m
[1mdiff --git a/src/IcebusHost.cpp b/src/IcebusHost.cpp[m
[1mindex 6cb7491..d6081d2 100644[m
[1m--- a/src/IcebusHost.cpp[m
[1m+++ b/src/IcebusHost.cpp[m
[36m@@ -232,10 +232,17 @@[m [mvoid IcebusHost::SendM3Command(int id, int32_t setpoint){[m
   write(serial_port, msg.data, sizeof(msg));[m
 }[m
 [m
[31m-void IcebusHost::SendM3ControlMode(int id, uint8_t control_mode){[m
[32m+[m[32mvoid IcebusHost::SendM3ControlMode(int id, uint8_t control_mode, int32_t setpoint){[m
   M3ControlMode msg;[m
   msg.values.id = id;[m
   msg.values.control_mode = control_mode;[m
[32m+[m[32m  msg.values.setpoint = setpoint;[m
[32m+[m[32m  msg.values.Kp =             400;[m
[32m+[m[32m  msg.values.Ki =               0;[m
[32m+[m[32m  msg.values.Kd =               0;[m
[32m+[m[32m  msg.values.deadband =         0;[m
[32m+[m[32m  msg.values.IntegralLimit =    0;[m
[32m+[m[32m  msg.values.PWMLimit =         0;[m
   msg.values.crc = gen_crc16(&msg.data[4],sizeof(msg)-4-2);[m
   // printf("control_mode------------>\t");[m
   // for(uint i=0;i<sizeof(msg);i++){[m
[36m@@ -326,15 +333,21 @@[m [mvoid IcebusHost::Listen(int id){[m
         case 0xDABAD000: {[m
           M3StatusResponse msg;[m
           memcpy(msg.data,read_buf,sizeof(msg));[m
[31m-          ROS_INFO_THROTTLE(10,"m3_status_response received for id %d\nsetpoint: %d\npos: %d\nvel: %d\ndis: %d\npwm: %d",[m
[31m-          read_buf[4], msg.values.setpoint, msg.values.pos, msg.values.vel, msg.values.dis, msg.values.pwm);[m
[32m+[m[32m          ROS_INFO_THROTTLE(10,"m3_status_response received for id %d\ncontrol mode: %d\nsetpoint: %d\npos: %d\nvel: %d\ndis: %d\npwm: %d",[m
[32m+[m[32m          read_buf[4], msg.values.control_mode, msg.values.setpoint, msg.values.pos, msg.values.vel, msg.values.dis, msg.values.pwm);[m
           for(auto &m:motor_config->motor){[m
             if(m.second->bus_id==read_buf[4]){[m
               encoder0_pos[m.first] = msg.values.pos;[m
               encoder1_pos[m.first] = msg.values.vel;[m
               displacement[m.first] = msg.values.dis;[m
               duty[m.first] = msg.values.pwm;[m
[31m-              if(msg.values.setpoint!=setpoint[m.first]){[m
[32m+[m[32m              if(msg.values.control_mode != control_mode[m.first]){[m
[32m+[m[32m                ROS_INFO_THROTTLE(10,"Current control_mode: %d, updating mode to: %d",[m
[32m+[m[32m                    msg.values.control_mode, control_mode[m.first]);[m
[32m+[m[32m                SendM3ControlMode(read_buf[4], control_mode[m.first], setpoint[m.first]);[m
[32m+[m[32m              }else if(msg.values.setpoint!=setpoint[m.first]){[m
[32m+[m[32m                ROS_INFO_THROTTLE(10,"Current setpoint: %d, sending desired setpoint: %d",[m
[32m+[m[32m                    msg.values.setpoint, setpoint[m.first]);[m
                 SendM3Command(read_buf[4],setpoint[m.first]);[m
               }[m
             }[m
[36m@@ -472,7 +485,7 @@[m [mbool IcebusHost::ControlModeService(roboy_middleware_msgs::ControlMode::Request[m
                 if(i<req.set_points.size()){[m
                   setpoint[motor] = req.set_points[i];[m
                 }[m
[31m-                ROS_INFO("changing control mode of motor %d to %d", motor, req.control_mode);[m
[32m+[m[32m                ROS_INFO("changing control mode of motor %d to %d, and pushing setpoint: %f", motor, req.control_mode, setpoint[motor]);[m
               }[m
             }[m
             i++;[m
[1mdiff --git a/src/icebus_demo_host.cpp b/src/icebus_demo_host.cpp[m
[1mindex 25fbeaf..4044228 100644[m
[1m--- a/src/icebus_demo_host.cpp[m
[1m+++ b/src/icebus_demo_host.cpp[m
[36m@@ -16,6 +16,7 @@[m [mint main(int argc, char *argv[]) {[m
   ros::Time t0=ros::Time::now();[m
   while(true){[m
     for(auto &m:icebus.motor_config->motor){[m
[32m+[m[32m      ROS_INFO_THROTTLE(100,"Sending status request to motor %d with bus_id %d.", m.first, m.second->bus_id);[m
       icebus.SendStatusRequest(m.second->bus_id);[m
       icebus.Listen(m.second->bus_id);[m
     }[m
